#include <iostream>
#include <string>
#include <algorithm>
#include <cctype>
using namespace std; 

//run increment
void Increment();

//create arrays
char cipher[26][26];
char alphabet[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

//set up main strings
string message;
string key;

int main(){

    //make 26x26 Vigen√®re cipher
    int row;
    int col;
    int letter;
    for(row = 0 ; row < 26; row++){
        letter = 0;
        for(col = 0 ; col < 26; col++ ){
            cipher[row][col] = alphabet[letter];
            letter++;
        //    cout << cipher[row][col];
        }
        Increment();
      //  cout << "\n";
    }

    /*-------------------set up message and key-----------------------------*/
    //input what message you want to encrypt
    cout << "Enter the message you would like to Encrypt: ";
    getline(cin, message);
    
    //remove spaces from message
    message.erase(remove(message.begin(),message.end(),' '),message.end());
    
    //input what key you shall be using
    cout << "Enter what key you will be using: ";
    getline(cin, key);  
    
    //remove spaces from key
    key.erase(remove(key.begin(),key.end(),' '),key.end());

    //make message and key uppercase
    transform(message.begin(), message.end(), message.begin(), ::toupper);
    transform(key.begin(), key.end(), key.begin(), ::toupper);

/*--------------------------------------------------------------------*/

/*-------------convert message and key into index arrays-------------------*/

    //get the length of the two strings
    int messageLength = message.length();
    int keyLength = key.length();

    //set up the index arrays
    int messageIndex[messageLength];
    int keyIndex[messageLength];

    //for loop to make messageIndex
    for (int i = 0; i < messageLength; ++i){
        char lett = message.at(i);        
        int index = -1;
        for (int j = 0; j < 26; ++j) {
            if (alphabet[j] == lett) {
                messageIndex[i] = j;
                break;
            }
        }
    }

//for loop to make keyIndex
    for (int i = 0; i < keyLength; ++i){
        char lett = key.at(i);        
        int index = -1;
        for (int j = 0; j < 26; ++j) {
            if (alphabet[j] == lett) {
                keyIndex[i] = j;
                break;
            }
        }
    }
/*--------------------------------------------------------------------*/

    char final[messageLength];
    for (int i = 0; i < keyLength; ++i){
        final[i]=cipher[keyIndex[i]][messageIndex[i]];
    }



/*--------------------testing to see if stuff works-------------------------*/
    cout << message << endl;
    cout << key << endl;
    
    
    for (int i = 0; i < messageLength; ++i){
        cout << messageIndex[i];
    }
    cout << endl;
    for (int i = 0; i < keyLength; ++i){
        cout << keyIndex[i];
    }
    cout << endl;
    for (int i = 0; i < keyLength; ++i){
        cout << final[i];
    }
    cout << endl;

   return 0;
}

//increment function
void Increment(){
    char temp;
    temp = alphabet[0];

    for(int i = 0; i < 25; i++){
        alphabet[i] = alphabet[i + 1];
    }

    alphabet[25] = temp;
}
